{"version":3,"file":"1-timer-6b2279cc.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst dataTimePicker = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector('[data-start]');\nconst daysTimer = document.querySelector('[data-days]');\nconst hoursTimer = document.querySelector('[data-hours]');\nconst minutesTimer = document.querySelector('[data-minutes]');\nconst secondsTimer = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst flatpickrInstance = flatpickr(dataTimePicker, {\n    enableTime: true,\n    time_24hr: true,\n    dateFormat: \"Y-m-d H:i\",\n    defaultDate: new Date(),\n    onClose: function(selectedDates) {\n        const selectedDate = selectedDates[0];\n        userSelectedDate = selectedDate;\n        \n        if (selectedDate > new Date()) {\n            startBtn.disabled = false;\n            userSelectedDate = selectedDate;\n        } else {\n            userSelectedDate = null;\n            startBtn.disabled = true;\n            iziToast.show({\n                message: 'Please choose a date in the future',\n                messageColor: '#fff',\n                position: 'topRight',\n                backgroundColor: '#ef4040',\n                animateInside: false,\n                color: '#fff'\n            });\n        }\n    },\n});\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction tick({ days, hours, minutes, seconds }) {\n    daysTimer.textContent = `${addLeadingZero(days)}`;\n    hoursTimer.textContent = `${addLeadingZero(hours)}`;\n    minutesTimer.textContent = `${addLeadingZero(minutes)}`;\n    secondsTimer.textContent = `${addLeadingZero(seconds)}`;\n\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n        timer.stop();\n    }\n}\n\nclass Timer {\n    constructor(tick) {\n        this.tick = tick;\n        this.isActive = false;\n        this.lastTime = 0;\n        this.intervalId = null;\n    }\n\n    start(targetDate) {\n        if (!targetDate) {\n            iziToast.error({\n                message: 'Please select a valid date before starting the timer',\n                messageColor: '#fff',\n                position: 'topRight',\n                backgroundColor: '#ef4040',\n                animateInside: false,\n                color: '#fff'\n            });\n            return;\n        }\n        if (this.isActive) return;\n        this.isActive = true;\n        this.targetDate = targetDate;\n        this.intervalId = setInterval(() => {\n            const current = Date.now();\n            const diff = this.targetDate - current;\n            const timeObj = this.convertMs(diff);\n            this.tick(timeObj);\n        }, 1000);\n        startBtn.disabled = true; \n    }\n\n    stop() {\n        if (!this.isActive) return;\n        this.lastTime = 0;\n        this.isActive = false;\n        clearInterval(this.intervalId);\n        \n        tick({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    }\n\n    convertMs(ms) {\n        // Number of milliseconds per unit of time\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n\n        // Remaining days\n        const days = Math.floor(ms / day);\n        // Remaining hours\n        const hours = Math.floor((ms % day) / hour);\n        // Remaining minutes\n        const minutes = Math.floor(((ms % day) % hour) / minute);\n        // Remaining seconds\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n        return { days, hours, minutes, seconds };\n    }\n}\n\nconst timer = new Timer(tick);\n\nstartBtn.addEventListener('click', () => {\n    const targetDate = flatpickrInstance.selectedDates[0];\n    timer.start(targetDate);\n});\n\n\n\n\n\n//console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n"],"names":["dataTimePicker","startBtn","daysTimer","hoursTimer","minutesTimer","secondsTimer","flatpickrInstance","flatpickr","selectedDates","iziToast","addLeadingZero","value","tick","days","hours","minutes","seconds","timer","Timer","targetDate","current","diff","timeObj","ms"],"mappings":"2CAQA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAItDC,EAAoBC,EAAUP,EAAgB,CAChD,WAAY,GACZ,UAAW,GACX,WAAY,YACZ,YAAa,IAAI,KACjB,QAAS,SAASQ,EAAe,CACRA,EAAc,GAGhB,IAAI,KACnBP,EAAS,SAAW,IAIpBA,EAAS,SAAW,GACpBQ,EAAS,KAAK,CACV,QAAS,qCACT,aAAc,OACd,SAAU,WACV,gBAAiB,UACjB,cAAe,GACf,MAAO,MACvB,CAAa,EAER,CACL,CAAC,EAED,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASC,EAAK,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Cd,EAAU,YAAc,GAAGQ,EAAeG,CAAI,IAC9CV,EAAW,YAAc,GAAGO,EAAeI,CAAK,IAChDV,EAAa,YAAc,GAAGM,EAAeK,CAAO,IACpDV,EAAa,YAAc,GAAGK,EAAeM,CAAO,IAEhDH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,GAC1DC,EAAM,KAAI,CAElB,CAEA,MAAMC,CAAM,CACR,YAAYN,EAAM,CACd,KAAK,KAAOA,EACZ,KAAK,SAAW,GAChB,KAAK,SAAW,EAChB,KAAK,WAAa,IACrB,CAED,MAAMO,EAAY,CACd,GAAI,CAACA,EAAY,CACbV,EAAS,MAAM,CACX,QAAS,uDACT,aAAc,OACd,SAAU,WACV,gBAAiB,UACjB,cAAe,GACf,MAAO,MACvB,CAAa,EACD,MACH,CACG,KAAK,WACT,KAAK,SAAW,GAChB,KAAK,WAAaU,EAClB,KAAK,WAAa,YAAY,IAAM,CAChC,MAAMC,EAAU,KAAK,MACfC,EAAO,KAAK,WAAaD,EACzBE,EAAU,KAAK,UAAUD,CAAI,EACnC,KAAK,KAAKC,CAAO,CACpB,EAAE,GAAI,EACPrB,EAAS,SAAW,GACvB,CAED,MAAO,CACE,KAAK,WACV,KAAK,SAAW,EAChB,KAAK,SAAW,GAChB,cAAc,KAAK,UAAU,EAE7BW,EAAK,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACrD,CAED,UAAUW,EAAI,CAQV,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAE1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EAEpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EAEjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACzC,CACL,CAEA,MAAMC,EAAQ,IAAIC,EAAMN,CAAI,EAE5BX,EAAS,iBAAiB,QAAS,IAAM,CACrC,MAAMkB,EAAab,EAAkB,cAAc,GACnDW,EAAM,MAAME,CAAU,CAC1B,CAAC"}